name: Build

on: [ workflow_dispatch ]

jobs:
  build_darwin_amd64:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          profile: minimal
          components: rustfmt, clippy

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target x86_64-apple-darwin

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: krunch-darwin-amd64
          path: target/x86_64-apple-darwin/release/krunch

  build_darwin_arm64:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal
          components: rustfmt, clippy

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target aarch64-apple-darwin

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: krunch-darwin-arm64
          path: target/aarch64-apple-darwin/release/krunch

  build_linux_amd64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          profile: minimal
          components: rustfmt, clippy

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: krunch-linux-amd64
          path: target/x86_64-unknown-linux-gnu/release/krunch

  build_windows_amd64:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          profile: minimal
          components: rustfmt, clippy

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target x86_64-pc-windows-gnu

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: krunch-windows-amd64
          path: target/x86_64-pc-windows-gnu/release/krunch.exe
